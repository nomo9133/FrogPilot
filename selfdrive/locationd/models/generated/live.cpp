#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_17012546015598539) {
   out_17012546015598539[0] = 0;
   out_17012546015598539[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_17012546015598539[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_17012546015598539[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_17012546015598539[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_17012546015598539[5] = -sin(in_vec[1]);
   out_17012546015598539[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_17012546015598539[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_17012546015598539[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_17012546015598539[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_17012546015598539[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_17012546015598539[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_17012546015598539[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_17012546015598539[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_17012546015598539[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_17012546015598539[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_17012546015598539[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_17012546015598539[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5372961235882842819) {
   out_5372961235882842819[0] = delta_x[0] + nom_x[0];
   out_5372961235882842819[1] = delta_x[1] + nom_x[1];
   out_5372961235882842819[2] = delta_x[2] + nom_x[2];
   out_5372961235882842819[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5372961235882842819[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5372961235882842819[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5372961235882842819[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5372961235882842819[7] = delta_x[6] + nom_x[7];
   out_5372961235882842819[8] = delta_x[7] + nom_x[8];
   out_5372961235882842819[9] = delta_x[8] + nom_x[9];
   out_5372961235882842819[10] = delta_x[9] + nom_x[10];
   out_5372961235882842819[11] = delta_x[10] + nom_x[11];
   out_5372961235882842819[12] = delta_x[11] + nom_x[12];
   out_5372961235882842819[13] = delta_x[12] + nom_x[13];
   out_5372961235882842819[14] = delta_x[13] + nom_x[14];
   out_5372961235882842819[15] = delta_x[14] + nom_x[15];
   out_5372961235882842819[16] = delta_x[15] + nom_x[16];
   out_5372961235882842819[17] = delta_x[16] + nom_x[17];
   out_5372961235882842819[18] = delta_x[17] + nom_x[18];
   out_5372961235882842819[19] = delta_x[18] + nom_x[19];
   out_5372961235882842819[20] = delta_x[19] + nom_x[20];
   out_5372961235882842819[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_602809784913223510) {
   out_602809784913223510[0] = -nom_x[0] + true_x[0];
   out_602809784913223510[1] = -nom_x[1] + true_x[1];
   out_602809784913223510[2] = -nom_x[2] + true_x[2];
   out_602809784913223510[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_602809784913223510[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_602809784913223510[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_602809784913223510[6] = -nom_x[7] + true_x[7];
   out_602809784913223510[7] = -nom_x[8] + true_x[8];
   out_602809784913223510[8] = -nom_x[9] + true_x[9];
   out_602809784913223510[9] = -nom_x[10] + true_x[10];
   out_602809784913223510[10] = -nom_x[11] + true_x[11];
   out_602809784913223510[11] = -nom_x[12] + true_x[12];
   out_602809784913223510[12] = -nom_x[13] + true_x[13];
   out_602809784913223510[13] = -nom_x[14] + true_x[14];
   out_602809784913223510[14] = -nom_x[15] + true_x[15];
   out_602809784913223510[15] = -nom_x[16] + true_x[16];
   out_602809784913223510[16] = -nom_x[17] + true_x[17];
   out_602809784913223510[17] = -nom_x[18] + true_x[18];
   out_602809784913223510[18] = -nom_x[19] + true_x[19];
   out_602809784913223510[19] = -nom_x[20] + true_x[20];
   out_602809784913223510[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2656752132345045346) {
   out_2656752132345045346[0] = 1.0;
   out_2656752132345045346[1] = 0;
   out_2656752132345045346[2] = 0;
   out_2656752132345045346[3] = 0;
   out_2656752132345045346[4] = 0;
   out_2656752132345045346[5] = 0;
   out_2656752132345045346[6] = 0;
   out_2656752132345045346[7] = 0;
   out_2656752132345045346[8] = 0;
   out_2656752132345045346[9] = 0;
   out_2656752132345045346[10] = 0;
   out_2656752132345045346[11] = 0;
   out_2656752132345045346[12] = 0;
   out_2656752132345045346[13] = 0;
   out_2656752132345045346[14] = 0;
   out_2656752132345045346[15] = 0;
   out_2656752132345045346[16] = 0;
   out_2656752132345045346[17] = 0;
   out_2656752132345045346[18] = 0;
   out_2656752132345045346[19] = 0;
   out_2656752132345045346[20] = 0;
   out_2656752132345045346[21] = 0;
   out_2656752132345045346[22] = 1.0;
   out_2656752132345045346[23] = 0;
   out_2656752132345045346[24] = 0;
   out_2656752132345045346[25] = 0;
   out_2656752132345045346[26] = 0;
   out_2656752132345045346[27] = 0;
   out_2656752132345045346[28] = 0;
   out_2656752132345045346[29] = 0;
   out_2656752132345045346[30] = 0;
   out_2656752132345045346[31] = 0;
   out_2656752132345045346[32] = 0;
   out_2656752132345045346[33] = 0;
   out_2656752132345045346[34] = 0;
   out_2656752132345045346[35] = 0;
   out_2656752132345045346[36] = 0;
   out_2656752132345045346[37] = 0;
   out_2656752132345045346[38] = 0;
   out_2656752132345045346[39] = 0;
   out_2656752132345045346[40] = 0;
   out_2656752132345045346[41] = 0;
   out_2656752132345045346[42] = 0;
   out_2656752132345045346[43] = 0;
   out_2656752132345045346[44] = 1.0;
   out_2656752132345045346[45] = 0;
   out_2656752132345045346[46] = 0;
   out_2656752132345045346[47] = 0;
   out_2656752132345045346[48] = 0;
   out_2656752132345045346[49] = 0;
   out_2656752132345045346[50] = 0;
   out_2656752132345045346[51] = 0;
   out_2656752132345045346[52] = 0;
   out_2656752132345045346[53] = 0;
   out_2656752132345045346[54] = 0;
   out_2656752132345045346[55] = 0;
   out_2656752132345045346[56] = 0;
   out_2656752132345045346[57] = 0;
   out_2656752132345045346[58] = 0;
   out_2656752132345045346[59] = 0;
   out_2656752132345045346[60] = 0;
   out_2656752132345045346[61] = 0;
   out_2656752132345045346[62] = 0;
   out_2656752132345045346[63] = 0;
   out_2656752132345045346[64] = 0;
   out_2656752132345045346[65] = 0;
   out_2656752132345045346[66] = -0.5*state[4];
   out_2656752132345045346[67] = -0.5*state[5];
   out_2656752132345045346[68] = -0.5*state[6];
   out_2656752132345045346[69] = 0;
   out_2656752132345045346[70] = 0;
   out_2656752132345045346[71] = 0;
   out_2656752132345045346[72] = 0;
   out_2656752132345045346[73] = 0;
   out_2656752132345045346[74] = 0;
   out_2656752132345045346[75] = 0;
   out_2656752132345045346[76] = 0;
   out_2656752132345045346[77] = 0;
   out_2656752132345045346[78] = 0;
   out_2656752132345045346[79] = 0;
   out_2656752132345045346[80] = 0;
   out_2656752132345045346[81] = 0;
   out_2656752132345045346[82] = 0;
   out_2656752132345045346[83] = 0;
   out_2656752132345045346[84] = 0;
   out_2656752132345045346[85] = 0;
   out_2656752132345045346[86] = 0;
   out_2656752132345045346[87] = 0.5*state[3];
   out_2656752132345045346[88] = 0.5*state[6];
   out_2656752132345045346[89] = -0.5*state[5];
   out_2656752132345045346[90] = 0;
   out_2656752132345045346[91] = 0;
   out_2656752132345045346[92] = 0;
   out_2656752132345045346[93] = 0;
   out_2656752132345045346[94] = 0;
   out_2656752132345045346[95] = 0;
   out_2656752132345045346[96] = 0;
   out_2656752132345045346[97] = 0;
   out_2656752132345045346[98] = 0;
   out_2656752132345045346[99] = 0;
   out_2656752132345045346[100] = 0;
   out_2656752132345045346[101] = 0;
   out_2656752132345045346[102] = 0;
   out_2656752132345045346[103] = 0;
   out_2656752132345045346[104] = 0;
   out_2656752132345045346[105] = 0;
   out_2656752132345045346[106] = 0;
   out_2656752132345045346[107] = 0;
   out_2656752132345045346[108] = -0.5*state[6];
   out_2656752132345045346[109] = 0.5*state[3];
   out_2656752132345045346[110] = 0.5*state[4];
   out_2656752132345045346[111] = 0;
   out_2656752132345045346[112] = 0;
   out_2656752132345045346[113] = 0;
   out_2656752132345045346[114] = 0;
   out_2656752132345045346[115] = 0;
   out_2656752132345045346[116] = 0;
   out_2656752132345045346[117] = 0;
   out_2656752132345045346[118] = 0;
   out_2656752132345045346[119] = 0;
   out_2656752132345045346[120] = 0;
   out_2656752132345045346[121] = 0;
   out_2656752132345045346[122] = 0;
   out_2656752132345045346[123] = 0;
   out_2656752132345045346[124] = 0;
   out_2656752132345045346[125] = 0;
   out_2656752132345045346[126] = 0;
   out_2656752132345045346[127] = 0;
   out_2656752132345045346[128] = 0;
   out_2656752132345045346[129] = 0.5*state[5];
   out_2656752132345045346[130] = -0.5*state[4];
   out_2656752132345045346[131] = 0.5*state[3];
   out_2656752132345045346[132] = 0;
   out_2656752132345045346[133] = 0;
   out_2656752132345045346[134] = 0;
   out_2656752132345045346[135] = 0;
   out_2656752132345045346[136] = 0;
   out_2656752132345045346[137] = 0;
   out_2656752132345045346[138] = 0;
   out_2656752132345045346[139] = 0;
   out_2656752132345045346[140] = 0;
   out_2656752132345045346[141] = 0;
   out_2656752132345045346[142] = 0;
   out_2656752132345045346[143] = 0;
   out_2656752132345045346[144] = 0;
   out_2656752132345045346[145] = 0;
   out_2656752132345045346[146] = 0;
   out_2656752132345045346[147] = 0;
   out_2656752132345045346[148] = 0;
   out_2656752132345045346[149] = 0;
   out_2656752132345045346[150] = 0;
   out_2656752132345045346[151] = 0;
   out_2656752132345045346[152] = 0;
   out_2656752132345045346[153] = 1.0;
   out_2656752132345045346[154] = 0;
   out_2656752132345045346[155] = 0;
   out_2656752132345045346[156] = 0;
   out_2656752132345045346[157] = 0;
   out_2656752132345045346[158] = 0;
   out_2656752132345045346[159] = 0;
   out_2656752132345045346[160] = 0;
   out_2656752132345045346[161] = 0;
   out_2656752132345045346[162] = 0;
   out_2656752132345045346[163] = 0;
   out_2656752132345045346[164] = 0;
   out_2656752132345045346[165] = 0;
   out_2656752132345045346[166] = 0;
   out_2656752132345045346[167] = 0;
   out_2656752132345045346[168] = 0;
   out_2656752132345045346[169] = 0;
   out_2656752132345045346[170] = 0;
   out_2656752132345045346[171] = 0;
   out_2656752132345045346[172] = 0;
   out_2656752132345045346[173] = 0;
   out_2656752132345045346[174] = 0;
   out_2656752132345045346[175] = 1.0;
   out_2656752132345045346[176] = 0;
   out_2656752132345045346[177] = 0;
   out_2656752132345045346[178] = 0;
   out_2656752132345045346[179] = 0;
   out_2656752132345045346[180] = 0;
   out_2656752132345045346[181] = 0;
   out_2656752132345045346[182] = 0;
   out_2656752132345045346[183] = 0;
   out_2656752132345045346[184] = 0;
   out_2656752132345045346[185] = 0;
   out_2656752132345045346[186] = 0;
   out_2656752132345045346[187] = 0;
   out_2656752132345045346[188] = 0;
   out_2656752132345045346[189] = 0;
   out_2656752132345045346[190] = 0;
   out_2656752132345045346[191] = 0;
   out_2656752132345045346[192] = 0;
   out_2656752132345045346[193] = 0;
   out_2656752132345045346[194] = 0;
   out_2656752132345045346[195] = 0;
   out_2656752132345045346[196] = 0;
   out_2656752132345045346[197] = 1.0;
   out_2656752132345045346[198] = 0;
   out_2656752132345045346[199] = 0;
   out_2656752132345045346[200] = 0;
   out_2656752132345045346[201] = 0;
   out_2656752132345045346[202] = 0;
   out_2656752132345045346[203] = 0;
   out_2656752132345045346[204] = 0;
   out_2656752132345045346[205] = 0;
   out_2656752132345045346[206] = 0;
   out_2656752132345045346[207] = 0;
   out_2656752132345045346[208] = 0;
   out_2656752132345045346[209] = 0;
   out_2656752132345045346[210] = 0;
   out_2656752132345045346[211] = 0;
   out_2656752132345045346[212] = 0;
   out_2656752132345045346[213] = 0;
   out_2656752132345045346[214] = 0;
   out_2656752132345045346[215] = 0;
   out_2656752132345045346[216] = 0;
   out_2656752132345045346[217] = 0;
   out_2656752132345045346[218] = 0;
   out_2656752132345045346[219] = 1.0;
   out_2656752132345045346[220] = 0;
   out_2656752132345045346[221] = 0;
   out_2656752132345045346[222] = 0;
   out_2656752132345045346[223] = 0;
   out_2656752132345045346[224] = 0;
   out_2656752132345045346[225] = 0;
   out_2656752132345045346[226] = 0;
   out_2656752132345045346[227] = 0;
   out_2656752132345045346[228] = 0;
   out_2656752132345045346[229] = 0;
   out_2656752132345045346[230] = 0;
   out_2656752132345045346[231] = 0;
   out_2656752132345045346[232] = 0;
   out_2656752132345045346[233] = 0;
   out_2656752132345045346[234] = 0;
   out_2656752132345045346[235] = 0;
   out_2656752132345045346[236] = 0;
   out_2656752132345045346[237] = 0;
   out_2656752132345045346[238] = 0;
   out_2656752132345045346[239] = 0;
   out_2656752132345045346[240] = 0;
   out_2656752132345045346[241] = 1.0;
   out_2656752132345045346[242] = 0;
   out_2656752132345045346[243] = 0;
   out_2656752132345045346[244] = 0;
   out_2656752132345045346[245] = 0;
   out_2656752132345045346[246] = 0;
   out_2656752132345045346[247] = 0;
   out_2656752132345045346[248] = 0;
   out_2656752132345045346[249] = 0;
   out_2656752132345045346[250] = 0;
   out_2656752132345045346[251] = 0;
   out_2656752132345045346[252] = 0;
   out_2656752132345045346[253] = 0;
   out_2656752132345045346[254] = 0;
   out_2656752132345045346[255] = 0;
   out_2656752132345045346[256] = 0;
   out_2656752132345045346[257] = 0;
   out_2656752132345045346[258] = 0;
   out_2656752132345045346[259] = 0;
   out_2656752132345045346[260] = 0;
   out_2656752132345045346[261] = 0;
   out_2656752132345045346[262] = 0;
   out_2656752132345045346[263] = 1.0;
   out_2656752132345045346[264] = 0;
   out_2656752132345045346[265] = 0;
   out_2656752132345045346[266] = 0;
   out_2656752132345045346[267] = 0;
   out_2656752132345045346[268] = 0;
   out_2656752132345045346[269] = 0;
   out_2656752132345045346[270] = 0;
   out_2656752132345045346[271] = 0;
   out_2656752132345045346[272] = 0;
   out_2656752132345045346[273] = 0;
   out_2656752132345045346[274] = 0;
   out_2656752132345045346[275] = 0;
   out_2656752132345045346[276] = 0;
   out_2656752132345045346[277] = 0;
   out_2656752132345045346[278] = 0;
   out_2656752132345045346[279] = 0;
   out_2656752132345045346[280] = 0;
   out_2656752132345045346[281] = 0;
   out_2656752132345045346[282] = 0;
   out_2656752132345045346[283] = 0;
   out_2656752132345045346[284] = 0;
   out_2656752132345045346[285] = 1.0;
   out_2656752132345045346[286] = 0;
   out_2656752132345045346[287] = 0;
   out_2656752132345045346[288] = 0;
   out_2656752132345045346[289] = 0;
   out_2656752132345045346[290] = 0;
   out_2656752132345045346[291] = 0;
   out_2656752132345045346[292] = 0;
   out_2656752132345045346[293] = 0;
   out_2656752132345045346[294] = 0;
   out_2656752132345045346[295] = 0;
   out_2656752132345045346[296] = 0;
   out_2656752132345045346[297] = 0;
   out_2656752132345045346[298] = 0;
   out_2656752132345045346[299] = 0;
   out_2656752132345045346[300] = 0;
   out_2656752132345045346[301] = 0;
   out_2656752132345045346[302] = 0;
   out_2656752132345045346[303] = 0;
   out_2656752132345045346[304] = 0;
   out_2656752132345045346[305] = 0;
   out_2656752132345045346[306] = 0;
   out_2656752132345045346[307] = 1.0;
   out_2656752132345045346[308] = 0;
   out_2656752132345045346[309] = 0;
   out_2656752132345045346[310] = 0;
   out_2656752132345045346[311] = 0;
   out_2656752132345045346[312] = 0;
   out_2656752132345045346[313] = 0;
   out_2656752132345045346[314] = 0;
   out_2656752132345045346[315] = 0;
   out_2656752132345045346[316] = 0;
   out_2656752132345045346[317] = 0;
   out_2656752132345045346[318] = 0;
   out_2656752132345045346[319] = 0;
   out_2656752132345045346[320] = 0;
   out_2656752132345045346[321] = 0;
   out_2656752132345045346[322] = 0;
   out_2656752132345045346[323] = 0;
   out_2656752132345045346[324] = 0;
   out_2656752132345045346[325] = 0;
   out_2656752132345045346[326] = 0;
   out_2656752132345045346[327] = 0;
   out_2656752132345045346[328] = 0;
   out_2656752132345045346[329] = 1.0;
   out_2656752132345045346[330] = 0;
   out_2656752132345045346[331] = 0;
   out_2656752132345045346[332] = 0;
   out_2656752132345045346[333] = 0;
   out_2656752132345045346[334] = 0;
   out_2656752132345045346[335] = 0;
   out_2656752132345045346[336] = 0;
   out_2656752132345045346[337] = 0;
   out_2656752132345045346[338] = 0;
   out_2656752132345045346[339] = 0;
   out_2656752132345045346[340] = 0;
   out_2656752132345045346[341] = 0;
   out_2656752132345045346[342] = 0;
   out_2656752132345045346[343] = 0;
   out_2656752132345045346[344] = 0;
   out_2656752132345045346[345] = 0;
   out_2656752132345045346[346] = 0;
   out_2656752132345045346[347] = 0;
   out_2656752132345045346[348] = 0;
   out_2656752132345045346[349] = 0;
   out_2656752132345045346[350] = 0;
   out_2656752132345045346[351] = 1.0;
   out_2656752132345045346[352] = 0;
   out_2656752132345045346[353] = 0;
   out_2656752132345045346[354] = 0;
   out_2656752132345045346[355] = 0;
   out_2656752132345045346[356] = 0;
   out_2656752132345045346[357] = 0;
   out_2656752132345045346[358] = 0;
   out_2656752132345045346[359] = 0;
   out_2656752132345045346[360] = 0;
   out_2656752132345045346[361] = 0;
   out_2656752132345045346[362] = 0;
   out_2656752132345045346[363] = 0;
   out_2656752132345045346[364] = 0;
   out_2656752132345045346[365] = 0;
   out_2656752132345045346[366] = 0;
   out_2656752132345045346[367] = 0;
   out_2656752132345045346[368] = 0;
   out_2656752132345045346[369] = 0;
   out_2656752132345045346[370] = 0;
   out_2656752132345045346[371] = 0;
   out_2656752132345045346[372] = 0;
   out_2656752132345045346[373] = 1.0;
   out_2656752132345045346[374] = 0;
   out_2656752132345045346[375] = 0;
   out_2656752132345045346[376] = 0;
   out_2656752132345045346[377] = 0;
   out_2656752132345045346[378] = 0;
   out_2656752132345045346[379] = 0;
   out_2656752132345045346[380] = 0;
   out_2656752132345045346[381] = 0;
   out_2656752132345045346[382] = 0;
   out_2656752132345045346[383] = 0;
   out_2656752132345045346[384] = 0;
   out_2656752132345045346[385] = 0;
   out_2656752132345045346[386] = 0;
   out_2656752132345045346[387] = 0;
   out_2656752132345045346[388] = 0;
   out_2656752132345045346[389] = 0;
   out_2656752132345045346[390] = 0;
   out_2656752132345045346[391] = 0;
   out_2656752132345045346[392] = 0;
   out_2656752132345045346[393] = 0;
   out_2656752132345045346[394] = 0;
   out_2656752132345045346[395] = 1.0;
   out_2656752132345045346[396] = 0;
   out_2656752132345045346[397] = 0;
   out_2656752132345045346[398] = 0;
   out_2656752132345045346[399] = 0;
   out_2656752132345045346[400] = 0;
   out_2656752132345045346[401] = 0;
   out_2656752132345045346[402] = 0;
   out_2656752132345045346[403] = 0;
   out_2656752132345045346[404] = 0;
   out_2656752132345045346[405] = 0;
   out_2656752132345045346[406] = 0;
   out_2656752132345045346[407] = 0;
   out_2656752132345045346[408] = 0;
   out_2656752132345045346[409] = 0;
   out_2656752132345045346[410] = 0;
   out_2656752132345045346[411] = 0;
   out_2656752132345045346[412] = 0;
   out_2656752132345045346[413] = 0;
   out_2656752132345045346[414] = 0;
   out_2656752132345045346[415] = 0;
   out_2656752132345045346[416] = 0;
   out_2656752132345045346[417] = 1.0;
   out_2656752132345045346[418] = 0;
   out_2656752132345045346[419] = 0;
   out_2656752132345045346[420] = 0;
   out_2656752132345045346[421] = 0;
   out_2656752132345045346[422] = 0;
   out_2656752132345045346[423] = 0;
   out_2656752132345045346[424] = 0;
   out_2656752132345045346[425] = 0;
   out_2656752132345045346[426] = 0;
   out_2656752132345045346[427] = 0;
   out_2656752132345045346[428] = 0;
   out_2656752132345045346[429] = 0;
   out_2656752132345045346[430] = 0;
   out_2656752132345045346[431] = 0;
   out_2656752132345045346[432] = 0;
   out_2656752132345045346[433] = 0;
   out_2656752132345045346[434] = 0;
   out_2656752132345045346[435] = 0;
   out_2656752132345045346[436] = 0;
   out_2656752132345045346[437] = 0;
   out_2656752132345045346[438] = 0;
   out_2656752132345045346[439] = 1.0;
   out_2656752132345045346[440] = 0;
   out_2656752132345045346[441] = 0;
   out_2656752132345045346[442] = 0;
   out_2656752132345045346[443] = 0;
   out_2656752132345045346[444] = 0;
   out_2656752132345045346[445] = 0;
   out_2656752132345045346[446] = 0;
   out_2656752132345045346[447] = 0;
   out_2656752132345045346[448] = 0;
   out_2656752132345045346[449] = 0;
   out_2656752132345045346[450] = 0;
   out_2656752132345045346[451] = 0;
   out_2656752132345045346[452] = 0;
   out_2656752132345045346[453] = 0;
   out_2656752132345045346[454] = 0;
   out_2656752132345045346[455] = 0;
   out_2656752132345045346[456] = 0;
   out_2656752132345045346[457] = 0;
   out_2656752132345045346[458] = 0;
   out_2656752132345045346[459] = 0;
   out_2656752132345045346[460] = 0;
   out_2656752132345045346[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9007316083055516200) {
   out_9007316083055516200[0] = dt*state[7] + state[0];
   out_9007316083055516200[1] = dt*state[8] + state[1];
   out_9007316083055516200[2] = dt*state[9] + state[2];
   out_9007316083055516200[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9007316083055516200[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9007316083055516200[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9007316083055516200[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9007316083055516200[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9007316083055516200[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9007316083055516200[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9007316083055516200[10] = state[10];
   out_9007316083055516200[11] = state[11];
   out_9007316083055516200[12] = state[12];
   out_9007316083055516200[13] = state[13];
   out_9007316083055516200[14] = state[14];
   out_9007316083055516200[15] = state[15];
   out_9007316083055516200[16] = state[16];
   out_9007316083055516200[17] = state[17];
   out_9007316083055516200[18] = state[18];
   out_9007316083055516200[19] = state[19];
   out_9007316083055516200[20] = state[20];
   out_9007316083055516200[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3338820108495768004) {
   out_3338820108495768004[0] = 1;
   out_3338820108495768004[1] = 0;
   out_3338820108495768004[2] = 0;
   out_3338820108495768004[3] = 0;
   out_3338820108495768004[4] = 0;
   out_3338820108495768004[5] = 0;
   out_3338820108495768004[6] = dt;
   out_3338820108495768004[7] = 0;
   out_3338820108495768004[8] = 0;
   out_3338820108495768004[9] = 0;
   out_3338820108495768004[10] = 0;
   out_3338820108495768004[11] = 0;
   out_3338820108495768004[12] = 0;
   out_3338820108495768004[13] = 0;
   out_3338820108495768004[14] = 0;
   out_3338820108495768004[15] = 0;
   out_3338820108495768004[16] = 0;
   out_3338820108495768004[17] = 0;
   out_3338820108495768004[18] = 0;
   out_3338820108495768004[19] = 0;
   out_3338820108495768004[20] = 0;
   out_3338820108495768004[21] = 0;
   out_3338820108495768004[22] = 1;
   out_3338820108495768004[23] = 0;
   out_3338820108495768004[24] = 0;
   out_3338820108495768004[25] = 0;
   out_3338820108495768004[26] = 0;
   out_3338820108495768004[27] = 0;
   out_3338820108495768004[28] = dt;
   out_3338820108495768004[29] = 0;
   out_3338820108495768004[30] = 0;
   out_3338820108495768004[31] = 0;
   out_3338820108495768004[32] = 0;
   out_3338820108495768004[33] = 0;
   out_3338820108495768004[34] = 0;
   out_3338820108495768004[35] = 0;
   out_3338820108495768004[36] = 0;
   out_3338820108495768004[37] = 0;
   out_3338820108495768004[38] = 0;
   out_3338820108495768004[39] = 0;
   out_3338820108495768004[40] = 0;
   out_3338820108495768004[41] = 0;
   out_3338820108495768004[42] = 0;
   out_3338820108495768004[43] = 0;
   out_3338820108495768004[44] = 1;
   out_3338820108495768004[45] = 0;
   out_3338820108495768004[46] = 0;
   out_3338820108495768004[47] = 0;
   out_3338820108495768004[48] = 0;
   out_3338820108495768004[49] = 0;
   out_3338820108495768004[50] = dt;
   out_3338820108495768004[51] = 0;
   out_3338820108495768004[52] = 0;
   out_3338820108495768004[53] = 0;
   out_3338820108495768004[54] = 0;
   out_3338820108495768004[55] = 0;
   out_3338820108495768004[56] = 0;
   out_3338820108495768004[57] = 0;
   out_3338820108495768004[58] = 0;
   out_3338820108495768004[59] = 0;
   out_3338820108495768004[60] = 0;
   out_3338820108495768004[61] = 0;
   out_3338820108495768004[62] = 0;
   out_3338820108495768004[63] = 0;
   out_3338820108495768004[64] = 0;
   out_3338820108495768004[65] = 0;
   out_3338820108495768004[66] = 1;
   out_3338820108495768004[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3338820108495768004[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3338820108495768004[69] = 0;
   out_3338820108495768004[70] = 0;
   out_3338820108495768004[71] = 0;
   out_3338820108495768004[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3338820108495768004[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3338820108495768004[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3338820108495768004[75] = 0;
   out_3338820108495768004[76] = 0;
   out_3338820108495768004[77] = 0;
   out_3338820108495768004[78] = 0;
   out_3338820108495768004[79] = 0;
   out_3338820108495768004[80] = 0;
   out_3338820108495768004[81] = 0;
   out_3338820108495768004[82] = 0;
   out_3338820108495768004[83] = 0;
   out_3338820108495768004[84] = 0;
   out_3338820108495768004[85] = 0;
   out_3338820108495768004[86] = 0;
   out_3338820108495768004[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3338820108495768004[88] = 1;
   out_3338820108495768004[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3338820108495768004[90] = 0;
   out_3338820108495768004[91] = 0;
   out_3338820108495768004[92] = 0;
   out_3338820108495768004[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3338820108495768004[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3338820108495768004[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3338820108495768004[96] = 0;
   out_3338820108495768004[97] = 0;
   out_3338820108495768004[98] = 0;
   out_3338820108495768004[99] = 0;
   out_3338820108495768004[100] = 0;
   out_3338820108495768004[101] = 0;
   out_3338820108495768004[102] = 0;
   out_3338820108495768004[103] = 0;
   out_3338820108495768004[104] = 0;
   out_3338820108495768004[105] = 0;
   out_3338820108495768004[106] = 0;
   out_3338820108495768004[107] = 0;
   out_3338820108495768004[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3338820108495768004[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3338820108495768004[110] = 1;
   out_3338820108495768004[111] = 0;
   out_3338820108495768004[112] = 0;
   out_3338820108495768004[113] = 0;
   out_3338820108495768004[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3338820108495768004[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3338820108495768004[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3338820108495768004[117] = 0;
   out_3338820108495768004[118] = 0;
   out_3338820108495768004[119] = 0;
   out_3338820108495768004[120] = 0;
   out_3338820108495768004[121] = 0;
   out_3338820108495768004[122] = 0;
   out_3338820108495768004[123] = 0;
   out_3338820108495768004[124] = 0;
   out_3338820108495768004[125] = 0;
   out_3338820108495768004[126] = 0;
   out_3338820108495768004[127] = 0;
   out_3338820108495768004[128] = 0;
   out_3338820108495768004[129] = 0;
   out_3338820108495768004[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3338820108495768004[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3338820108495768004[132] = 1;
   out_3338820108495768004[133] = 0;
   out_3338820108495768004[134] = 0;
   out_3338820108495768004[135] = 0;
   out_3338820108495768004[136] = 0;
   out_3338820108495768004[137] = 0;
   out_3338820108495768004[138] = 0;
   out_3338820108495768004[139] = 0;
   out_3338820108495768004[140] = 0;
   out_3338820108495768004[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3338820108495768004[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3338820108495768004[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3338820108495768004[144] = 0;
   out_3338820108495768004[145] = 0;
   out_3338820108495768004[146] = 0;
   out_3338820108495768004[147] = 0;
   out_3338820108495768004[148] = 0;
   out_3338820108495768004[149] = 0;
   out_3338820108495768004[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3338820108495768004[151] = 0;
   out_3338820108495768004[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3338820108495768004[153] = 0;
   out_3338820108495768004[154] = 1;
   out_3338820108495768004[155] = 0;
   out_3338820108495768004[156] = 0;
   out_3338820108495768004[157] = 0;
   out_3338820108495768004[158] = 0;
   out_3338820108495768004[159] = 0;
   out_3338820108495768004[160] = 0;
   out_3338820108495768004[161] = 0;
   out_3338820108495768004[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3338820108495768004[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3338820108495768004[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3338820108495768004[165] = 0;
   out_3338820108495768004[166] = 0;
   out_3338820108495768004[167] = 0;
   out_3338820108495768004[168] = 0;
   out_3338820108495768004[169] = 0;
   out_3338820108495768004[170] = 0;
   out_3338820108495768004[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3338820108495768004[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3338820108495768004[173] = 0;
   out_3338820108495768004[174] = 0;
   out_3338820108495768004[175] = 0;
   out_3338820108495768004[176] = 1;
   out_3338820108495768004[177] = 0;
   out_3338820108495768004[178] = 0;
   out_3338820108495768004[179] = 0;
   out_3338820108495768004[180] = 0;
   out_3338820108495768004[181] = 0;
   out_3338820108495768004[182] = 0;
   out_3338820108495768004[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3338820108495768004[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3338820108495768004[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3338820108495768004[186] = 0;
   out_3338820108495768004[187] = 0;
   out_3338820108495768004[188] = 0;
   out_3338820108495768004[189] = 0;
   out_3338820108495768004[190] = 0;
   out_3338820108495768004[191] = 0;
   out_3338820108495768004[192] = 0;
   out_3338820108495768004[193] = 0;
   out_3338820108495768004[194] = 0;
   out_3338820108495768004[195] = 0;
   out_3338820108495768004[196] = 0;
   out_3338820108495768004[197] = 0;
   out_3338820108495768004[198] = 1;
   out_3338820108495768004[199] = 0;
   out_3338820108495768004[200] = 0;
   out_3338820108495768004[201] = 0;
   out_3338820108495768004[202] = 0;
   out_3338820108495768004[203] = 0;
   out_3338820108495768004[204] = 0;
   out_3338820108495768004[205] = 0;
   out_3338820108495768004[206] = 0;
   out_3338820108495768004[207] = 0;
   out_3338820108495768004[208] = 0;
   out_3338820108495768004[209] = 0;
   out_3338820108495768004[210] = 0;
   out_3338820108495768004[211] = 0;
   out_3338820108495768004[212] = 0;
   out_3338820108495768004[213] = 0;
   out_3338820108495768004[214] = 0;
   out_3338820108495768004[215] = 0;
   out_3338820108495768004[216] = 0;
   out_3338820108495768004[217] = 0;
   out_3338820108495768004[218] = 0;
   out_3338820108495768004[219] = 0;
   out_3338820108495768004[220] = 1;
   out_3338820108495768004[221] = 0;
   out_3338820108495768004[222] = 0;
   out_3338820108495768004[223] = 0;
   out_3338820108495768004[224] = 0;
   out_3338820108495768004[225] = 0;
   out_3338820108495768004[226] = 0;
   out_3338820108495768004[227] = 0;
   out_3338820108495768004[228] = 0;
   out_3338820108495768004[229] = 0;
   out_3338820108495768004[230] = 0;
   out_3338820108495768004[231] = 0;
   out_3338820108495768004[232] = 0;
   out_3338820108495768004[233] = 0;
   out_3338820108495768004[234] = 0;
   out_3338820108495768004[235] = 0;
   out_3338820108495768004[236] = 0;
   out_3338820108495768004[237] = 0;
   out_3338820108495768004[238] = 0;
   out_3338820108495768004[239] = 0;
   out_3338820108495768004[240] = 0;
   out_3338820108495768004[241] = 0;
   out_3338820108495768004[242] = 1;
   out_3338820108495768004[243] = 0;
   out_3338820108495768004[244] = 0;
   out_3338820108495768004[245] = 0;
   out_3338820108495768004[246] = 0;
   out_3338820108495768004[247] = 0;
   out_3338820108495768004[248] = 0;
   out_3338820108495768004[249] = 0;
   out_3338820108495768004[250] = 0;
   out_3338820108495768004[251] = 0;
   out_3338820108495768004[252] = 0;
   out_3338820108495768004[253] = 0;
   out_3338820108495768004[254] = 0;
   out_3338820108495768004[255] = 0;
   out_3338820108495768004[256] = 0;
   out_3338820108495768004[257] = 0;
   out_3338820108495768004[258] = 0;
   out_3338820108495768004[259] = 0;
   out_3338820108495768004[260] = 0;
   out_3338820108495768004[261] = 0;
   out_3338820108495768004[262] = 0;
   out_3338820108495768004[263] = 0;
   out_3338820108495768004[264] = 1;
   out_3338820108495768004[265] = 0;
   out_3338820108495768004[266] = 0;
   out_3338820108495768004[267] = 0;
   out_3338820108495768004[268] = 0;
   out_3338820108495768004[269] = 0;
   out_3338820108495768004[270] = 0;
   out_3338820108495768004[271] = 0;
   out_3338820108495768004[272] = 0;
   out_3338820108495768004[273] = 0;
   out_3338820108495768004[274] = 0;
   out_3338820108495768004[275] = 0;
   out_3338820108495768004[276] = 0;
   out_3338820108495768004[277] = 0;
   out_3338820108495768004[278] = 0;
   out_3338820108495768004[279] = 0;
   out_3338820108495768004[280] = 0;
   out_3338820108495768004[281] = 0;
   out_3338820108495768004[282] = 0;
   out_3338820108495768004[283] = 0;
   out_3338820108495768004[284] = 0;
   out_3338820108495768004[285] = 0;
   out_3338820108495768004[286] = 1;
   out_3338820108495768004[287] = 0;
   out_3338820108495768004[288] = 0;
   out_3338820108495768004[289] = 0;
   out_3338820108495768004[290] = 0;
   out_3338820108495768004[291] = 0;
   out_3338820108495768004[292] = 0;
   out_3338820108495768004[293] = 0;
   out_3338820108495768004[294] = 0;
   out_3338820108495768004[295] = 0;
   out_3338820108495768004[296] = 0;
   out_3338820108495768004[297] = 0;
   out_3338820108495768004[298] = 0;
   out_3338820108495768004[299] = 0;
   out_3338820108495768004[300] = 0;
   out_3338820108495768004[301] = 0;
   out_3338820108495768004[302] = 0;
   out_3338820108495768004[303] = 0;
   out_3338820108495768004[304] = 0;
   out_3338820108495768004[305] = 0;
   out_3338820108495768004[306] = 0;
   out_3338820108495768004[307] = 0;
   out_3338820108495768004[308] = 1;
   out_3338820108495768004[309] = 0;
   out_3338820108495768004[310] = 0;
   out_3338820108495768004[311] = 0;
   out_3338820108495768004[312] = 0;
   out_3338820108495768004[313] = 0;
   out_3338820108495768004[314] = 0;
   out_3338820108495768004[315] = 0;
   out_3338820108495768004[316] = 0;
   out_3338820108495768004[317] = 0;
   out_3338820108495768004[318] = 0;
   out_3338820108495768004[319] = 0;
   out_3338820108495768004[320] = 0;
   out_3338820108495768004[321] = 0;
   out_3338820108495768004[322] = 0;
   out_3338820108495768004[323] = 0;
   out_3338820108495768004[324] = 0;
   out_3338820108495768004[325] = 0;
   out_3338820108495768004[326] = 0;
   out_3338820108495768004[327] = 0;
   out_3338820108495768004[328] = 0;
   out_3338820108495768004[329] = 0;
   out_3338820108495768004[330] = 1;
   out_3338820108495768004[331] = 0;
   out_3338820108495768004[332] = 0;
   out_3338820108495768004[333] = 0;
   out_3338820108495768004[334] = 0;
   out_3338820108495768004[335] = 0;
   out_3338820108495768004[336] = 0;
   out_3338820108495768004[337] = 0;
   out_3338820108495768004[338] = 0;
   out_3338820108495768004[339] = 0;
   out_3338820108495768004[340] = 0;
   out_3338820108495768004[341] = 0;
   out_3338820108495768004[342] = 0;
   out_3338820108495768004[343] = 0;
   out_3338820108495768004[344] = 0;
   out_3338820108495768004[345] = 0;
   out_3338820108495768004[346] = 0;
   out_3338820108495768004[347] = 0;
   out_3338820108495768004[348] = 0;
   out_3338820108495768004[349] = 0;
   out_3338820108495768004[350] = 0;
   out_3338820108495768004[351] = 0;
   out_3338820108495768004[352] = 1;
   out_3338820108495768004[353] = 0;
   out_3338820108495768004[354] = 0;
   out_3338820108495768004[355] = 0;
   out_3338820108495768004[356] = 0;
   out_3338820108495768004[357] = 0;
   out_3338820108495768004[358] = 0;
   out_3338820108495768004[359] = 0;
   out_3338820108495768004[360] = 0;
   out_3338820108495768004[361] = 0;
   out_3338820108495768004[362] = 0;
   out_3338820108495768004[363] = 0;
   out_3338820108495768004[364] = 0;
   out_3338820108495768004[365] = 0;
   out_3338820108495768004[366] = 0;
   out_3338820108495768004[367] = 0;
   out_3338820108495768004[368] = 0;
   out_3338820108495768004[369] = 0;
   out_3338820108495768004[370] = 0;
   out_3338820108495768004[371] = 0;
   out_3338820108495768004[372] = 0;
   out_3338820108495768004[373] = 0;
   out_3338820108495768004[374] = 1;
   out_3338820108495768004[375] = 0;
   out_3338820108495768004[376] = 0;
   out_3338820108495768004[377] = 0;
   out_3338820108495768004[378] = 0;
   out_3338820108495768004[379] = 0;
   out_3338820108495768004[380] = 0;
   out_3338820108495768004[381] = 0;
   out_3338820108495768004[382] = 0;
   out_3338820108495768004[383] = 0;
   out_3338820108495768004[384] = 0;
   out_3338820108495768004[385] = 0;
   out_3338820108495768004[386] = 0;
   out_3338820108495768004[387] = 0;
   out_3338820108495768004[388] = 0;
   out_3338820108495768004[389] = 0;
   out_3338820108495768004[390] = 0;
   out_3338820108495768004[391] = 0;
   out_3338820108495768004[392] = 0;
   out_3338820108495768004[393] = 0;
   out_3338820108495768004[394] = 0;
   out_3338820108495768004[395] = 0;
   out_3338820108495768004[396] = 1;
   out_3338820108495768004[397] = 0;
   out_3338820108495768004[398] = 0;
   out_3338820108495768004[399] = 0;
   out_3338820108495768004[400] = 0;
   out_3338820108495768004[401] = 0;
   out_3338820108495768004[402] = 0;
   out_3338820108495768004[403] = 0;
   out_3338820108495768004[404] = 0;
   out_3338820108495768004[405] = 0;
   out_3338820108495768004[406] = 0;
   out_3338820108495768004[407] = 0;
   out_3338820108495768004[408] = 0;
   out_3338820108495768004[409] = 0;
   out_3338820108495768004[410] = 0;
   out_3338820108495768004[411] = 0;
   out_3338820108495768004[412] = 0;
   out_3338820108495768004[413] = 0;
   out_3338820108495768004[414] = 0;
   out_3338820108495768004[415] = 0;
   out_3338820108495768004[416] = 0;
   out_3338820108495768004[417] = 0;
   out_3338820108495768004[418] = 1;
   out_3338820108495768004[419] = 0;
   out_3338820108495768004[420] = 0;
   out_3338820108495768004[421] = 0;
   out_3338820108495768004[422] = 0;
   out_3338820108495768004[423] = 0;
   out_3338820108495768004[424] = 0;
   out_3338820108495768004[425] = 0;
   out_3338820108495768004[426] = 0;
   out_3338820108495768004[427] = 0;
   out_3338820108495768004[428] = 0;
   out_3338820108495768004[429] = 0;
   out_3338820108495768004[430] = 0;
   out_3338820108495768004[431] = 0;
   out_3338820108495768004[432] = 0;
   out_3338820108495768004[433] = 0;
   out_3338820108495768004[434] = 0;
   out_3338820108495768004[435] = 0;
   out_3338820108495768004[436] = 0;
   out_3338820108495768004[437] = 0;
   out_3338820108495768004[438] = 0;
   out_3338820108495768004[439] = 0;
   out_3338820108495768004[440] = 1;
}
void h_4(double *state, double *unused, double *out_1830130235484486886) {
   out_1830130235484486886[0] = state[10] + state[13];
   out_1830130235484486886[1] = state[11] + state[14];
   out_1830130235484486886[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1094950168553842687) {
   out_1094950168553842687[0] = 0;
   out_1094950168553842687[1] = 0;
   out_1094950168553842687[2] = 0;
   out_1094950168553842687[3] = 0;
   out_1094950168553842687[4] = 0;
   out_1094950168553842687[5] = 0;
   out_1094950168553842687[6] = 0;
   out_1094950168553842687[7] = 0;
   out_1094950168553842687[8] = 0;
   out_1094950168553842687[9] = 0;
   out_1094950168553842687[10] = 1;
   out_1094950168553842687[11] = 0;
   out_1094950168553842687[12] = 0;
   out_1094950168553842687[13] = 1;
   out_1094950168553842687[14] = 0;
   out_1094950168553842687[15] = 0;
   out_1094950168553842687[16] = 0;
   out_1094950168553842687[17] = 0;
   out_1094950168553842687[18] = 0;
   out_1094950168553842687[19] = 0;
   out_1094950168553842687[20] = 0;
   out_1094950168553842687[21] = 0;
   out_1094950168553842687[22] = 0;
   out_1094950168553842687[23] = 0;
   out_1094950168553842687[24] = 0;
   out_1094950168553842687[25] = 0;
   out_1094950168553842687[26] = 0;
   out_1094950168553842687[27] = 0;
   out_1094950168553842687[28] = 0;
   out_1094950168553842687[29] = 0;
   out_1094950168553842687[30] = 0;
   out_1094950168553842687[31] = 0;
   out_1094950168553842687[32] = 0;
   out_1094950168553842687[33] = 1;
   out_1094950168553842687[34] = 0;
   out_1094950168553842687[35] = 0;
   out_1094950168553842687[36] = 1;
   out_1094950168553842687[37] = 0;
   out_1094950168553842687[38] = 0;
   out_1094950168553842687[39] = 0;
   out_1094950168553842687[40] = 0;
   out_1094950168553842687[41] = 0;
   out_1094950168553842687[42] = 0;
   out_1094950168553842687[43] = 0;
   out_1094950168553842687[44] = 0;
   out_1094950168553842687[45] = 0;
   out_1094950168553842687[46] = 0;
   out_1094950168553842687[47] = 0;
   out_1094950168553842687[48] = 0;
   out_1094950168553842687[49] = 0;
   out_1094950168553842687[50] = 0;
   out_1094950168553842687[51] = 0;
   out_1094950168553842687[52] = 0;
   out_1094950168553842687[53] = 0;
   out_1094950168553842687[54] = 0;
   out_1094950168553842687[55] = 0;
   out_1094950168553842687[56] = 1;
   out_1094950168553842687[57] = 0;
   out_1094950168553842687[58] = 0;
   out_1094950168553842687[59] = 1;
   out_1094950168553842687[60] = 0;
   out_1094950168553842687[61] = 0;
   out_1094950168553842687[62] = 0;
   out_1094950168553842687[63] = 0;
   out_1094950168553842687[64] = 0;
   out_1094950168553842687[65] = 0;
}
void h_9(double *state, double *unused, double *out_4662176704888987128) {
   out_4662176704888987128[0] = state[10];
   out_4662176704888987128[1] = state[11];
   out_4662176704888987128[2] = state[12];
}
void H_9(double *state, double *unused, double *out_853760521924252042) {
   out_853760521924252042[0] = 0;
   out_853760521924252042[1] = 0;
   out_853760521924252042[2] = 0;
   out_853760521924252042[3] = 0;
   out_853760521924252042[4] = 0;
   out_853760521924252042[5] = 0;
   out_853760521924252042[6] = 0;
   out_853760521924252042[7] = 0;
   out_853760521924252042[8] = 0;
   out_853760521924252042[9] = 0;
   out_853760521924252042[10] = 1;
   out_853760521924252042[11] = 0;
   out_853760521924252042[12] = 0;
   out_853760521924252042[13] = 0;
   out_853760521924252042[14] = 0;
   out_853760521924252042[15] = 0;
   out_853760521924252042[16] = 0;
   out_853760521924252042[17] = 0;
   out_853760521924252042[18] = 0;
   out_853760521924252042[19] = 0;
   out_853760521924252042[20] = 0;
   out_853760521924252042[21] = 0;
   out_853760521924252042[22] = 0;
   out_853760521924252042[23] = 0;
   out_853760521924252042[24] = 0;
   out_853760521924252042[25] = 0;
   out_853760521924252042[26] = 0;
   out_853760521924252042[27] = 0;
   out_853760521924252042[28] = 0;
   out_853760521924252042[29] = 0;
   out_853760521924252042[30] = 0;
   out_853760521924252042[31] = 0;
   out_853760521924252042[32] = 0;
   out_853760521924252042[33] = 1;
   out_853760521924252042[34] = 0;
   out_853760521924252042[35] = 0;
   out_853760521924252042[36] = 0;
   out_853760521924252042[37] = 0;
   out_853760521924252042[38] = 0;
   out_853760521924252042[39] = 0;
   out_853760521924252042[40] = 0;
   out_853760521924252042[41] = 0;
   out_853760521924252042[42] = 0;
   out_853760521924252042[43] = 0;
   out_853760521924252042[44] = 0;
   out_853760521924252042[45] = 0;
   out_853760521924252042[46] = 0;
   out_853760521924252042[47] = 0;
   out_853760521924252042[48] = 0;
   out_853760521924252042[49] = 0;
   out_853760521924252042[50] = 0;
   out_853760521924252042[51] = 0;
   out_853760521924252042[52] = 0;
   out_853760521924252042[53] = 0;
   out_853760521924252042[54] = 0;
   out_853760521924252042[55] = 0;
   out_853760521924252042[56] = 1;
   out_853760521924252042[57] = 0;
   out_853760521924252042[58] = 0;
   out_853760521924252042[59] = 0;
   out_853760521924252042[60] = 0;
   out_853760521924252042[61] = 0;
   out_853760521924252042[62] = 0;
   out_853760521924252042[63] = 0;
   out_853760521924252042[64] = 0;
   out_853760521924252042[65] = 0;
}
void h_10(double *state, double *unused, double *out_2464681750059480650) {
   out_2464681750059480650[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2464681750059480650[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2464681750059480650[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3401365783234144753) {
   out_3401365783234144753[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3401365783234144753[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3401365783234144753[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3401365783234144753[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3401365783234144753[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3401365783234144753[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3401365783234144753[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3401365783234144753[7] = 0;
   out_3401365783234144753[8] = 0;
   out_3401365783234144753[9] = 0;
   out_3401365783234144753[10] = 0;
   out_3401365783234144753[11] = 0;
   out_3401365783234144753[12] = 0;
   out_3401365783234144753[13] = 0;
   out_3401365783234144753[14] = 0;
   out_3401365783234144753[15] = 0;
   out_3401365783234144753[16] = 1;
   out_3401365783234144753[17] = 0;
   out_3401365783234144753[18] = 0;
   out_3401365783234144753[19] = 1;
   out_3401365783234144753[20] = 0;
   out_3401365783234144753[21] = 0;
   out_3401365783234144753[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3401365783234144753[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3401365783234144753[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3401365783234144753[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3401365783234144753[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3401365783234144753[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3401365783234144753[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3401365783234144753[29] = 0;
   out_3401365783234144753[30] = 0;
   out_3401365783234144753[31] = 0;
   out_3401365783234144753[32] = 0;
   out_3401365783234144753[33] = 0;
   out_3401365783234144753[34] = 0;
   out_3401365783234144753[35] = 0;
   out_3401365783234144753[36] = 0;
   out_3401365783234144753[37] = 0;
   out_3401365783234144753[38] = 0;
   out_3401365783234144753[39] = 1;
   out_3401365783234144753[40] = 0;
   out_3401365783234144753[41] = 0;
   out_3401365783234144753[42] = 1;
   out_3401365783234144753[43] = 0;
   out_3401365783234144753[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3401365783234144753[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3401365783234144753[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3401365783234144753[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3401365783234144753[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3401365783234144753[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3401365783234144753[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3401365783234144753[51] = 0;
   out_3401365783234144753[52] = 0;
   out_3401365783234144753[53] = 0;
   out_3401365783234144753[54] = 0;
   out_3401365783234144753[55] = 0;
   out_3401365783234144753[56] = 0;
   out_3401365783234144753[57] = 0;
   out_3401365783234144753[58] = 0;
   out_3401365783234144753[59] = 0;
   out_3401365783234144753[60] = 0;
   out_3401365783234144753[61] = 0;
   out_3401365783234144753[62] = 1;
   out_3401365783234144753[63] = 0;
   out_3401365783234144753[64] = 0;
   out_3401365783234144753[65] = 1;
}
void h_12(double *state, double *unused, double *out_8279264054477559918) {
   out_8279264054477559918[0] = state[0];
   out_8279264054477559918[1] = state[1];
   out_8279264054477559918[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3924506239478119108) {
   out_3924506239478119108[0] = 1;
   out_3924506239478119108[1] = 0;
   out_3924506239478119108[2] = 0;
   out_3924506239478119108[3] = 0;
   out_3924506239478119108[4] = 0;
   out_3924506239478119108[5] = 0;
   out_3924506239478119108[6] = 0;
   out_3924506239478119108[7] = 0;
   out_3924506239478119108[8] = 0;
   out_3924506239478119108[9] = 0;
   out_3924506239478119108[10] = 0;
   out_3924506239478119108[11] = 0;
   out_3924506239478119108[12] = 0;
   out_3924506239478119108[13] = 0;
   out_3924506239478119108[14] = 0;
   out_3924506239478119108[15] = 0;
   out_3924506239478119108[16] = 0;
   out_3924506239478119108[17] = 0;
   out_3924506239478119108[18] = 0;
   out_3924506239478119108[19] = 0;
   out_3924506239478119108[20] = 0;
   out_3924506239478119108[21] = 0;
   out_3924506239478119108[22] = 0;
   out_3924506239478119108[23] = 1;
   out_3924506239478119108[24] = 0;
   out_3924506239478119108[25] = 0;
   out_3924506239478119108[26] = 0;
   out_3924506239478119108[27] = 0;
   out_3924506239478119108[28] = 0;
   out_3924506239478119108[29] = 0;
   out_3924506239478119108[30] = 0;
   out_3924506239478119108[31] = 0;
   out_3924506239478119108[32] = 0;
   out_3924506239478119108[33] = 0;
   out_3924506239478119108[34] = 0;
   out_3924506239478119108[35] = 0;
   out_3924506239478119108[36] = 0;
   out_3924506239478119108[37] = 0;
   out_3924506239478119108[38] = 0;
   out_3924506239478119108[39] = 0;
   out_3924506239478119108[40] = 0;
   out_3924506239478119108[41] = 0;
   out_3924506239478119108[42] = 0;
   out_3924506239478119108[43] = 0;
   out_3924506239478119108[44] = 0;
   out_3924506239478119108[45] = 0;
   out_3924506239478119108[46] = 1;
   out_3924506239478119108[47] = 0;
   out_3924506239478119108[48] = 0;
   out_3924506239478119108[49] = 0;
   out_3924506239478119108[50] = 0;
   out_3924506239478119108[51] = 0;
   out_3924506239478119108[52] = 0;
   out_3924506239478119108[53] = 0;
   out_3924506239478119108[54] = 0;
   out_3924506239478119108[55] = 0;
   out_3924506239478119108[56] = 0;
   out_3924506239478119108[57] = 0;
   out_3924506239478119108[58] = 0;
   out_3924506239478119108[59] = 0;
   out_3924506239478119108[60] = 0;
   out_3924506239478119108[61] = 0;
   out_3924506239478119108[62] = 0;
   out_3924506239478119108[63] = 0;
   out_3924506239478119108[64] = 0;
   out_3924506239478119108[65] = 0;
}
void h_35(double *state, double *unused, double *out_6357342133332783614) {
   out_6357342133332783614[0] = state[7];
   out_6357342133332783614[1] = state[8];
   out_6357342133332783614[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6670069271803132817) {
   out_6670069271803132817[0] = 0;
   out_6670069271803132817[1] = 0;
   out_6670069271803132817[2] = 0;
   out_6670069271803132817[3] = 0;
   out_6670069271803132817[4] = 0;
   out_6670069271803132817[5] = 0;
   out_6670069271803132817[6] = 0;
   out_6670069271803132817[7] = 1;
   out_6670069271803132817[8] = 0;
   out_6670069271803132817[9] = 0;
   out_6670069271803132817[10] = 0;
   out_6670069271803132817[11] = 0;
   out_6670069271803132817[12] = 0;
   out_6670069271803132817[13] = 0;
   out_6670069271803132817[14] = 0;
   out_6670069271803132817[15] = 0;
   out_6670069271803132817[16] = 0;
   out_6670069271803132817[17] = 0;
   out_6670069271803132817[18] = 0;
   out_6670069271803132817[19] = 0;
   out_6670069271803132817[20] = 0;
   out_6670069271803132817[21] = 0;
   out_6670069271803132817[22] = 0;
   out_6670069271803132817[23] = 0;
   out_6670069271803132817[24] = 0;
   out_6670069271803132817[25] = 0;
   out_6670069271803132817[26] = 0;
   out_6670069271803132817[27] = 0;
   out_6670069271803132817[28] = 0;
   out_6670069271803132817[29] = 0;
   out_6670069271803132817[30] = 1;
   out_6670069271803132817[31] = 0;
   out_6670069271803132817[32] = 0;
   out_6670069271803132817[33] = 0;
   out_6670069271803132817[34] = 0;
   out_6670069271803132817[35] = 0;
   out_6670069271803132817[36] = 0;
   out_6670069271803132817[37] = 0;
   out_6670069271803132817[38] = 0;
   out_6670069271803132817[39] = 0;
   out_6670069271803132817[40] = 0;
   out_6670069271803132817[41] = 0;
   out_6670069271803132817[42] = 0;
   out_6670069271803132817[43] = 0;
   out_6670069271803132817[44] = 0;
   out_6670069271803132817[45] = 0;
   out_6670069271803132817[46] = 0;
   out_6670069271803132817[47] = 0;
   out_6670069271803132817[48] = 0;
   out_6670069271803132817[49] = 0;
   out_6670069271803132817[50] = 0;
   out_6670069271803132817[51] = 0;
   out_6670069271803132817[52] = 0;
   out_6670069271803132817[53] = 1;
   out_6670069271803132817[54] = 0;
   out_6670069271803132817[55] = 0;
   out_6670069271803132817[56] = 0;
   out_6670069271803132817[57] = 0;
   out_6670069271803132817[58] = 0;
   out_6670069271803132817[59] = 0;
   out_6670069271803132817[60] = 0;
   out_6670069271803132817[61] = 0;
   out_6670069271803132817[62] = 0;
   out_6670069271803132817[63] = 0;
   out_6670069271803132817[64] = 0;
   out_6670069271803132817[65] = 0;
}
void h_32(double *state, double *unused, double *out_8418370076317261373) {
   out_8418370076317261373[0] = state[3];
   out_8418370076317261373[1] = state[4];
   out_8418370076317261373[2] = state[5];
   out_8418370076317261373[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2402876673759505158) {
   out_2402876673759505158[0] = 0;
   out_2402876673759505158[1] = 0;
   out_2402876673759505158[2] = 0;
   out_2402876673759505158[3] = 1;
   out_2402876673759505158[4] = 0;
   out_2402876673759505158[5] = 0;
   out_2402876673759505158[6] = 0;
   out_2402876673759505158[7] = 0;
   out_2402876673759505158[8] = 0;
   out_2402876673759505158[9] = 0;
   out_2402876673759505158[10] = 0;
   out_2402876673759505158[11] = 0;
   out_2402876673759505158[12] = 0;
   out_2402876673759505158[13] = 0;
   out_2402876673759505158[14] = 0;
   out_2402876673759505158[15] = 0;
   out_2402876673759505158[16] = 0;
   out_2402876673759505158[17] = 0;
   out_2402876673759505158[18] = 0;
   out_2402876673759505158[19] = 0;
   out_2402876673759505158[20] = 0;
   out_2402876673759505158[21] = 0;
   out_2402876673759505158[22] = 0;
   out_2402876673759505158[23] = 0;
   out_2402876673759505158[24] = 0;
   out_2402876673759505158[25] = 0;
   out_2402876673759505158[26] = 1;
   out_2402876673759505158[27] = 0;
   out_2402876673759505158[28] = 0;
   out_2402876673759505158[29] = 0;
   out_2402876673759505158[30] = 0;
   out_2402876673759505158[31] = 0;
   out_2402876673759505158[32] = 0;
   out_2402876673759505158[33] = 0;
   out_2402876673759505158[34] = 0;
   out_2402876673759505158[35] = 0;
   out_2402876673759505158[36] = 0;
   out_2402876673759505158[37] = 0;
   out_2402876673759505158[38] = 0;
   out_2402876673759505158[39] = 0;
   out_2402876673759505158[40] = 0;
   out_2402876673759505158[41] = 0;
   out_2402876673759505158[42] = 0;
   out_2402876673759505158[43] = 0;
   out_2402876673759505158[44] = 0;
   out_2402876673759505158[45] = 0;
   out_2402876673759505158[46] = 0;
   out_2402876673759505158[47] = 0;
   out_2402876673759505158[48] = 0;
   out_2402876673759505158[49] = 1;
   out_2402876673759505158[50] = 0;
   out_2402876673759505158[51] = 0;
   out_2402876673759505158[52] = 0;
   out_2402876673759505158[53] = 0;
   out_2402876673759505158[54] = 0;
   out_2402876673759505158[55] = 0;
   out_2402876673759505158[56] = 0;
   out_2402876673759505158[57] = 0;
   out_2402876673759505158[58] = 0;
   out_2402876673759505158[59] = 0;
   out_2402876673759505158[60] = 0;
   out_2402876673759505158[61] = 0;
   out_2402876673759505158[62] = 0;
   out_2402876673759505158[63] = 0;
   out_2402876673759505158[64] = 0;
   out_2402876673759505158[65] = 0;
   out_2402876673759505158[66] = 0;
   out_2402876673759505158[67] = 0;
   out_2402876673759505158[68] = 0;
   out_2402876673759505158[69] = 0;
   out_2402876673759505158[70] = 0;
   out_2402876673759505158[71] = 0;
   out_2402876673759505158[72] = 1;
   out_2402876673759505158[73] = 0;
   out_2402876673759505158[74] = 0;
   out_2402876673759505158[75] = 0;
   out_2402876673759505158[76] = 0;
   out_2402876673759505158[77] = 0;
   out_2402876673759505158[78] = 0;
   out_2402876673759505158[79] = 0;
   out_2402876673759505158[80] = 0;
   out_2402876673759505158[81] = 0;
   out_2402876673759505158[82] = 0;
   out_2402876673759505158[83] = 0;
   out_2402876673759505158[84] = 0;
   out_2402876673759505158[85] = 0;
   out_2402876673759505158[86] = 0;
   out_2402876673759505158[87] = 0;
}
void h_13(double *state, double *unused, double *out_3390567141497980698) {
   out_3390567141497980698[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3390567141497980698[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3390567141497980698[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2783760559877807082) {
   out_2783760559877807082[0] = 0;
   out_2783760559877807082[1] = 0;
   out_2783760559877807082[2] = 0;
   out_2783760559877807082[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2783760559877807082[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2783760559877807082[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2783760559877807082[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2783760559877807082[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2783760559877807082[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2783760559877807082[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2783760559877807082[10] = 0;
   out_2783760559877807082[11] = 0;
   out_2783760559877807082[12] = 0;
   out_2783760559877807082[13] = 0;
   out_2783760559877807082[14] = 0;
   out_2783760559877807082[15] = 0;
   out_2783760559877807082[16] = 0;
   out_2783760559877807082[17] = 0;
   out_2783760559877807082[18] = 0;
   out_2783760559877807082[19] = 0;
   out_2783760559877807082[20] = 0;
   out_2783760559877807082[21] = 0;
   out_2783760559877807082[22] = 0;
   out_2783760559877807082[23] = 0;
   out_2783760559877807082[24] = 0;
   out_2783760559877807082[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2783760559877807082[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2783760559877807082[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2783760559877807082[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2783760559877807082[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2783760559877807082[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2783760559877807082[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2783760559877807082[32] = 0;
   out_2783760559877807082[33] = 0;
   out_2783760559877807082[34] = 0;
   out_2783760559877807082[35] = 0;
   out_2783760559877807082[36] = 0;
   out_2783760559877807082[37] = 0;
   out_2783760559877807082[38] = 0;
   out_2783760559877807082[39] = 0;
   out_2783760559877807082[40] = 0;
   out_2783760559877807082[41] = 0;
   out_2783760559877807082[42] = 0;
   out_2783760559877807082[43] = 0;
   out_2783760559877807082[44] = 0;
   out_2783760559877807082[45] = 0;
   out_2783760559877807082[46] = 0;
   out_2783760559877807082[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2783760559877807082[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2783760559877807082[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2783760559877807082[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2783760559877807082[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2783760559877807082[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2783760559877807082[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2783760559877807082[54] = 0;
   out_2783760559877807082[55] = 0;
   out_2783760559877807082[56] = 0;
   out_2783760559877807082[57] = 0;
   out_2783760559877807082[58] = 0;
   out_2783760559877807082[59] = 0;
   out_2783760559877807082[60] = 0;
   out_2783760559877807082[61] = 0;
   out_2783760559877807082[62] = 0;
   out_2783760559877807082[63] = 0;
   out_2783760559877807082[64] = 0;
   out_2783760559877807082[65] = 0;
}
void h_14(double *state, double *unused, double *out_4662176704888987128) {
   out_4662176704888987128[0] = state[10];
   out_4662176704888987128[1] = state[11];
   out_4662176704888987128[2] = state[12];
}
void H_14(double *state, double *unused, double *out_853760521924252042) {
   out_853760521924252042[0] = 0;
   out_853760521924252042[1] = 0;
   out_853760521924252042[2] = 0;
   out_853760521924252042[3] = 0;
   out_853760521924252042[4] = 0;
   out_853760521924252042[5] = 0;
   out_853760521924252042[6] = 0;
   out_853760521924252042[7] = 0;
   out_853760521924252042[8] = 0;
   out_853760521924252042[9] = 0;
   out_853760521924252042[10] = 1;
   out_853760521924252042[11] = 0;
   out_853760521924252042[12] = 0;
   out_853760521924252042[13] = 0;
   out_853760521924252042[14] = 0;
   out_853760521924252042[15] = 0;
   out_853760521924252042[16] = 0;
   out_853760521924252042[17] = 0;
   out_853760521924252042[18] = 0;
   out_853760521924252042[19] = 0;
   out_853760521924252042[20] = 0;
   out_853760521924252042[21] = 0;
   out_853760521924252042[22] = 0;
   out_853760521924252042[23] = 0;
   out_853760521924252042[24] = 0;
   out_853760521924252042[25] = 0;
   out_853760521924252042[26] = 0;
   out_853760521924252042[27] = 0;
   out_853760521924252042[28] = 0;
   out_853760521924252042[29] = 0;
   out_853760521924252042[30] = 0;
   out_853760521924252042[31] = 0;
   out_853760521924252042[32] = 0;
   out_853760521924252042[33] = 1;
   out_853760521924252042[34] = 0;
   out_853760521924252042[35] = 0;
   out_853760521924252042[36] = 0;
   out_853760521924252042[37] = 0;
   out_853760521924252042[38] = 0;
   out_853760521924252042[39] = 0;
   out_853760521924252042[40] = 0;
   out_853760521924252042[41] = 0;
   out_853760521924252042[42] = 0;
   out_853760521924252042[43] = 0;
   out_853760521924252042[44] = 0;
   out_853760521924252042[45] = 0;
   out_853760521924252042[46] = 0;
   out_853760521924252042[47] = 0;
   out_853760521924252042[48] = 0;
   out_853760521924252042[49] = 0;
   out_853760521924252042[50] = 0;
   out_853760521924252042[51] = 0;
   out_853760521924252042[52] = 0;
   out_853760521924252042[53] = 0;
   out_853760521924252042[54] = 0;
   out_853760521924252042[55] = 0;
   out_853760521924252042[56] = 1;
   out_853760521924252042[57] = 0;
   out_853760521924252042[58] = 0;
   out_853760521924252042[59] = 0;
   out_853760521924252042[60] = 0;
   out_853760521924252042[61] = 0;
   out_853760521924252042[62] = 0;
   out_853760521924252042[63] = 0;
   out_853760521924252042[64] = 0;
   out_853760521924252042[65] = 0;
}
void h_33(double *state, double *unused, double *out_246390446369488272) {
   out_246390446369488272[0] = state[16];
   out_246390446369488272[1] = state[17];
   out_246390446369488272[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5422268893457622293) {
   out_5422268893457622293[0] = 0;
   out_5422268893457622293[1] = 0;
   out_5422268893457622293[2] = 0;
   out_5422268893457622293[3] = 0;
   out_5422268893457622293[4] = 0;
   out_5422268893457622293[5] = 0;
   out_5422268893457622293[6] = 0;
   out_5422268893457622293[7] = 0;
   out_5422268893457622293[8] = 0;
   out_5422268893457622293[9] = 0;
   out_5422268893457622293[10] = 0;
   out_5422268893457622293[11] = 0;
   out_5422268893457622293[12] = 0;
   out_5422268893457622293[13] = 0;
   out_5422268893457622293[14] = 0;
   out_5422268893457622293[15] = 0;
   out_5422268893457622293[16] = 1;
   out_5422268893457622293[17] = 0;
   out_5422268893457622293[18] = 0;
   out_5422268893457622293[19] = 0;
   out_5422268893457622293[20] = 0;
   out_5422268893457622293[21] = 0;
   out_5422268893457622293[22] = 0;
   out_5422268893457622293[23] = 0;
   out_5422268893457622293[24] = 0;
   out_5422268893457622293[25] = 0;
   out_5422268893457622293[26] = 0;
   out_5422268893457622293[27] = 0;
   out_5422268893457622293[28] = 0;
   out_5422268893457622293[29] = 0;
   out_5422268893457622293[30] = 0;
   out_5422268893457622293[31] = 0;
   out_5422268893457622293[32] = 0;
   out_5422268893457622293[33] = 0;
   out_5422268893457622293[34] = 0;
   out_5422268893457622293[35] = 0;
   out_5422268893457622293[36] = 0;
   out_5422268893457622293[37] = 0;
   out_5422268893457622293[38] = 0;
   out_5422268893457622293[39] = 1;
   out_5422268893457622293[40] = 0;
   out_5422268893457622293[41] = 0;
   out_5422268893457622293[42] = 0;
   out_5422268893457622293[43] = 0;
   out_5422268893457622293[44] = 0;
   out_5422268893457622293[45] = 0;
   out_5422268893457622293[46] = 0;
   out_5422268893457622293[47] = 0;
   out_5422268893457622293[48] = 0;
   out_5422268893457622293[49] = 0;
   out_5422268893457622293[50] = 0;
   out_5422268893457622293[51] = 0;
   out_5422268893457622293[52] = 0;
   out_5422268893457622293[53] = 0;
   out_5422268893457622293[54] = 0;
   out_5422268893457622293[55] = 0;
   out_5422268893457622293[56] = 0;
   out_5422268893457622293[57] = 0;
   out_5422268893457622293[58] = 0;
   out_5422268893457622293[59] = 0;
   out_5422268893457622293[60] = 0;
   out_5422268893457622293[61] = 0;
   out_5422268893457622293[62] = 1;
   out_5422268893457622293[63] = 0;
   out_5422268893457622293[64] = 0;
   out_5422268893457622293[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_17012546015598539) {
  H(in_vec, out_17012546015598539);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5372961235882842819) {
  err_fun(nom_x, delta_x, out_5372961235882842819);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_602809784913223510) {
  inv_err_fun(nom_x, true_x, out_602809784913223510);
}
void live_H_mod_fun(double *state, double *out_2656752132345045346) {
  H_mod_fun(state, out_2656752132345045346);
}
void live_f_fun(double *state, double dt, double *out_9007316083055516200) {
  f_fun(state,  dt, out_9007316083055516200);
}
void live_F_fun(double *state, double dt, double *out_3338820108495768004) {
  F_fun(state,  dt, out_3338820108495768004);
}
void live_h_4(double *state, double *unused, double *out_1830130235484486886) {
  h_4(state, unused, out_1830130235484486886);
}
void live_H_4(double *state, double *unused, double *out_1094950168553842687) {
  H_4(state, unused, out_1094950168553842687);
}
void live_h_9(double *state, double *unused, double *out_4662176704888987128) {
  h_9(state, unused, out_4662176704888987128);
}
void live_H_9(double *state, double *unused, double *out_853760521924252042) {
  H_9(state, unused, out_853760521924252042);
}
void live_h_10(double *state, double *unused, double *out_2464681750059480650) {
  h_10(state, unused, out_2464681750059480650);
}
void live_H_10(double *state, double *unused, double *out_3401365783234144753) {
  H_10(state, unused, out_3401365783234144753);
}
void live_h_12(double *state, double *unused, double *out_8279264054477559918) {
  h_12(state, unused, out_8279264054477559918);
}
void live_H_12(double *state, double *unused, double *out_3924506239478119108) {
  H_12(state, unused, out_3924506239478119108);
}
void live_h_35(double *state, double *unused, double *out_6357342133332783614) {
  h_35(state, unused, out_6357342133332783614);
}
void live_H_35(double *state, double *unused, double *out_6670069271803132817) {
  H_35(state, unused, out_6670069271803132817);
}
void live_h_32(double *state, double *unused, double *out_8418370076317261373) {
  h_32(state, unused, out_8418370076317261373);
}
void live_H_32(double *state, double *unused, double *out_2402876673759505158) {
  H_32(state, unused, out_2402876673759505158);
}
void live_h_13(double *state, double *unused, double *out_3390567141497980698) {
  h_13(state, unused, out_3390567141497980698);
}
void live_H_13(double *state, double *unused, double *out_2783760559877807082) {
  H_13(state, unused, out_2783760559877807082);
}
void live_h_14(double *state, double *unused, double *out_4662176704888987128) {
  h_14(state, unused, out_4662176704888987128);
}
void live_H_14(double *state, double *unused, double *out_853760521924252042) {
  H_14(state, unused, out_853760521924252042);
}
void live_h_33(double *state, double *unused, double *out_246390446369488272) {
  h_33(state, unused, out_246390446369488272);
}
void live_H_33(double *state, double *unused, double *out_5422268893457622293) {
  H_33(state, unused, out_5422268893457622293);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
